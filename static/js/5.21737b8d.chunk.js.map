{"version":3,"sources":["components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.js","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","pages/AllQuotes.js"],"names":["module","exports","NoQuotesFound","className","classes","noquotes","to","QuoteItem","props","item","text","author","id","QuoteList","quotes","ascending","history","useHistory","location","useLocation","isSortingAscending","URLSearchParams","search","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","AllQuotes","useHttp","getAllQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"oFACAA,EAAOC,QAAU,CAAC,SAAW,kC,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,iFCa5CC,EAXO,WACpB,OACE,sBAAKC,UAAWC,IAAQC,SAAxB,UACE,iDACA,cAAC,IAAD,CAAMF,UAAU,MAAMG,GAAG,aAAzB,6B,wBCcSC,EAhBG,SAACC,GACjB,OACE,qBAAIL,UAAWC,IAAQK,KAAvB,UACE,mCACE,qCACE,4BAAID,EAAME,SAEZ,qCAAaF,EAAMG,YAErB,cAAC,IAAD,CAAMR,UAAU,MAAMG,GAAE,iBAAYE,EAAMI,IAA1C,iC,iBCuCSC,EAnCG,SAACL,GACjB,IAbkBM,EAAQC,EAapBC,EAAUC,cACVC,EAAWC,cAGXC,EAAiD,QAFnC,IAAIC,gBAAgBH,EAASI,QAEVC,IAAI,QAErCC,GAnBYV,EAmBaN,EAAMM,OAnBXC,EAmBmBK,EAjB3CN,EAAOW,MAAK,SAACC,EAAQC,GACnB,OAAGZ,EACMW,EAAOd,GAAKe,EAAOf,GAAK,GAAG,EAE3Bc,EAAOd,GAAKe,EAAS,GAAI,MAsBtC,OACE,eAAC,WAAD,WACE,qBAAKxB,UAAWC,IAAQwB,QAAxB,SACE,yBAAQC,QAVe,WAC3Bb,EAAQc,KAAK,CACXC,SAAUb,EAASa,SACnBT,OAAO,SAAD,OAAWF,EAAmB,OAAQ,UAO1C,kBAA6CA,EAAqB,aAAc,iBAElF,oBAAIjB,UAAWC,IAAQ4B,KAAvB,SACGR,EAAaS,KAAI,SAACC,GAAD,OAChB,cAAC,EAAD,CAEEtB,GAAIsB,EAAMtB,GACVD,OAAQuB,EAAMvB,OACdD,KAAMwB,EAAMxB,MAHPwB,EAAMtB,a,wBCTRuB,UAzBG,WAChB,MAKIC,YAAQC,KAAc,GAJxBC,EADF,EACEA,YACAC,EAFF,EAEEA,OACMC,EAHR,EAGEC,KACAC,EAJF,EAIEA,MAMF,OAHAC,qBAAW,WACTL,MACA,CAACA,IACU,YAAVC,EACM,qBAAKpC,UAAU,WAAf,SACL,cAACyC,EAAA,EAAD,MAGDF,EACM,mBAAGvC,UAAU,mBAAb,SAAiCuC,IAE9B,cAATH,GAAyBC,GAAwC,IAAxBA,EAAaK,OAGlD,cAAC,EAAD,CAAW/B,OAAQ0B,IAFjB,cAAC,EAAD","file":"static/js/5.21737b8d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3ybYh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__Gk2QG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__c9mkx\",\"sorting\":\"QuoteList_sorting__17HlV\"};","import { Link } from 'react-router-dom';\nimport classes from './NoQuotesFound.module.css';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className='btn' to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import {Link} from 'react-router-dom';\n\nimport classes from './QuoteItem.module.css';\n\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link className='btn' to={`quotes/${props.id}`}>\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport {useHistory, useLocation} from 'react-router-dom'\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortQuotes = (quotes, ascending)=>{\n  return(\n    quotes.sort((quoteA, quoteB)=>{\n      if(ascending){\n        return quoteA.id > quoteB.id ? 1:-1;\n      }else{\n        return quoteA.id < quoteB ? 1: -1;\n      }\n    })\n  );\n};\n\nconst QuoteList = (props) =>{\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n\n  const isSortingAscending = queryParams.get('sort') === \"asc\";\n\n  const sortedQuotes= sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = ()=>{\n    history.push({\n      pathname: location.pathname,\n      search:`?sort=${(isSortingAscending?'desc': 'asc')}`\n    });\n    //history.push(`${location.pathname}?sort= ${(isSortingAscending?'desc': 'asc')}`);\n  }\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortingAscending ? 'Descending': 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { useEffect } from \"react\";\r\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\r\n\r\nimport QuoteList from \"../components/quotes/QuoteList\";\r\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\r\nimport useHttp from \"../hooks/use-http\";\r\nimport { getAllQuotes } from \"../lib/api\";\r\n\r\nconst AllQuotes = () => {\r\n  const {\r\n    sendRequest,\r\n    status,\r\n    data: loadedQuotes,\r\n    error,\r\n  } = useHttp(getAllQuotes, true);\r\n\r\n  useEffect (()=>{\r\n    sendRequest();\r\n  },[sendRequest]); \r\n  if(status ==='pending'){\r\n    return <div className='centered'>\r\n      <LoadingSpinner/>\r\n    </div>\r\n  }\r\n  if(error){\r\n    return <p className='centered focused'>{error}</p>\r\n  }\r\n  if(status===\"completed\" &&(!loadedQuotes || loadedQuotes.length === 0)){\r\n    return <NoQuotesFound/>\r\n  }\r\n  return <QuoteList quotes={loadedQuotes} />;\r\n};\r\n\r\nexport default AllQuotes;\r\n"],"sourceRoot":""}